# Generated from Project.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,84,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,
        1,8,1,8,3,8,47,8,8,1,9,3,9,50,8,9,1,9,4,9,53,8,9,11,9,12,9,54,1,
        9,1,9,5,9,59,8,9,10,9,12,9,62,9,9,3,9,64,8,9,1,10,4,10,67,8,10,11,
        10,12,10,68,1,11,1,11,5,11,73,8,11,10,11,12,11,76,9,11,1,12,4,12,
        79,8,12,11,12,12,12,80,1,12,1,12,0,0,13,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,0,6,2,0,43,43,45,45,1,0,
        48,57,3,0,48,57,65,90,97,122,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,3,0,9,10,13,13,32,32,91,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,1,27,1,0,0,0,3,29,1,0,0,0,5,31,1,0,0,0,7,34,1,0,0,0,9,
        36,1,0,0,0,11,38,1,0,0,0,13,40,1,0,0,0,15,42,1,0,0,0,17,46,1,0,0,
        0,19,49,1,0,0,0,21,66,1,0,0,0,23,70,1,0,0,0,25,78,1,0,0,0,27,28,
        5,40,0,0,28,2,1,0,0,0,29,30,5,41,0,0,30,4,1,0,0,0,31,32,5,42,0,0,
        32,33,5,42,0,0,33,6,1,0,0,0,34,35,5,42,0,0,35,8,1,0,0,0,36,37,5,
        47,0,0,37,10,1,0,0,0,38,39,5,37,0,0,39,12,1,0,0,0,40,41,5,43,0,0,
        41,14,1,0,0,0,42,43,5,45,0,0,43,16,1,0,0,0,44,47,3,19,9,0,45,47,
        3,21,10,0,46,44,1,0,0,0,46,45,1,0,0,0,47,18,1,0,0,0,48,50,7,0,0,
        0,49,48,1,0,0,0,49,50,1,0,0,0,50,52,1,0,0,0,51,53,7,1,0,0,52,51,
        1,0,0,0,53,54,1,0,0,0,54,52,1,0,0,0,54,55,1,0,0,0,55,63,1,0,0,0,
        56,60,5,46,0,0,57,59,7,1,0,0,58,57,1,0,0,0,59,62,1,0,0,0,60,58,1,
        0,0,0,60,61,1,0,0,0,61,64,1,0,0,0,62,60,1,0,0,0,63,56,1,0,0,0,63,
        64,1,0,0,0,64,20,1,0,0,0,65,67,7,2,0,0,66,65,1,0,0,0,67,68,1,0,0,
        0,68,66,1,0,0,0,68,69,1,0,0,0,69,22,1,0,0,0,70,74,7,3,0,0,71,73,
        7,4,0,0,72,71,1,0,0,0,73,76,1,0,0,0,74,72,1,0,0,0,74,75,1,0,0,0,
        75,24,1,0,0,0,76,74,1,0,0,0,77,79,7,5,0,0,78,77,1,0,0,0,79,80,1,
        0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,82,1,0,0,0,82,83,6,12,0,0,83,
        26,1,0,0,0,10,0,46,49,54,60,63,66,68,74,80,1,6,0,0
    ]

class ProjectLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    EXPON = 3
    MULT = 4
    DIV = 5
    MOD = 6
    ADD = 7
    SUB = 8
    ATOM = 9
    NUM = 10
    CHAR = 11
    VAR = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'**'", "'*'", "'/'", "'%'", "'+'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "EXPON", "MULT", "DIV", "MOD", "ADD", "SUB", "ATOM", "NUM", 
            "CHAR", "VAR", "WS" ]

    ruleNames = [ "T__0", "T__1", "EXPON", "MULT", "DIV", "MOD", "ADD", 
                  "SUB", "ATOM", "NUM", "CHAR", "VAR", "WS" ]

    grammarFileName = "Project.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


